// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


/////////////////////////////////////////////////////////////////////////////////
MerchantTaxQuest is TaxQuestTemplate
// Quest template QST_ID_MERCHANT_TAX = 52.
// Quest nodes 161, 162.
// QNT_ID_MERCHANT_TAX_ONE, QNT_ID_MERCHANT_TAX_TWO

// QuestTemplate is
// [ quest template index
//   quest template object
//   number of players,
//   type of quest,
//   eligible player restrictions,
//   quest nodes,
//   max number active,
//   currently active quests,
//   percent chance of scheduling (on timer firing)
//   special restrictions ]

constants:

   include blakston.khd

resources:

   include merchanttaxqt.lkod

   // Quest description.
   merchanttaxqt_name_rsc = "Late Payments"
   merchanttaxqt_desc_rsc = \
      "%s is late on their merchant taxes, and is looking for a trustworthy "
      "adventurer to rush their payment to the Duke.  If you are willing to "
      "carry out the delivery, Duke Akardius would reward you for your service."

   merchanttaxqt_completed_rsc = \
      "You have collected taxes for the Duke, and have been rewarded for your "
      "service."

   // Quest resources.
   merchanttax_assign_2 = \
      "Will you take my taxes to %NPC?  I am certain I am late this time and "
      "need you to take these %INDEF_CARGO%CARGO to %NPC.  Thievery will "
      "brand you an outlaw quickly so think not about deception.  I have "
      "arranged for your fee to be paid by %HIMHER_NPC."
   merchanttax_assign_2_h = \
      "Will you take my taxes to %NPC?  I am certain I am late this time and "
      "need you to take these %INDEF_CARGO%CARGO to %NPC.  Thievery will "
      "result in misfortune so think not about deception.  I have arranged for "
      "your fee to be paid by %HIMHER_NPC."
   merchanttax_success_2 = \
      "Ah, I was wondering when %SOURCE_NPC was going to pay me a visit.  "
      "Here is your payment for your... speedy service.   "
   merchanttax_failure_2 = \
      "Subject: Thief!\n"
      "Your thievery of %CARGO has made you an outlaw by decree of %NPC."

classvars:

   vrName = merchanttaxqt_name_rsc
   vrDesc = merchanttaxqt_desc_rsc

   vrCompleted = merchanttaxqt_completed_rsc

   // The QST_ID constant for this quest.
   viQuestID = QST_ID_MERCHANT_TAX

properties:

messages:

   Constructor()
   {
      // Quest node list to send to QuestEngine.
      plQuestNodes = [QNT_ID_MERCHANT_TAX_ONE, QNT_ID_MERCHANT_TAX_TWO];

      // Quest nodes with matching descriptions for the player.
      plQuestNodeDesc = [ [QNT_ID_MERCHANT_TAX_TWO, vrNodeTwo] ];

      propagate;
   }

   SendQuestNodeTemplates()
   {
      local lNPCs, oNPC, oQE, oLib;

      oQE = Send(SYS,@GetQuestEngine);
      oLib = Send(SYS,@GetLibrary);

      // Template #161 is merchant tax quest
      // QNT_ID_MERCHANT_TAX_ONE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #NPC_modifier=QN_NPCMOD_NONE,#cargolist=[ letter_trigger ],
               #quest_node_index=QNT_ID_MERCHANT_TAX_ONE)
      {
         lNPCs = $;
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&BarloqueMerchant)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&JasperElder)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&MarionElder)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&TosApothecary)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&BarloqueApothecary)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&JasperMerchant)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&CornothGrocer)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_MERCHANT_TAX_ONE,
               #new_NPC_list=lNPCs);
      }
      else
      {
         Debug("Error building QN: QNT_ID_MERCHANT_TAX_ONE");
      }

      // Template #162 is merchant tax quest
      // QNT_ID_MERCHANT_TAX_TWO
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_ITEMCLASS,
               #cargolist=[ [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 130 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 113 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 157 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 123 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 161 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 173 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 143 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 163 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 103 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 220 ] ],
               #prizelist=[[[ QN_PRIZETYPE_ITEMCLASS, &InkyCap, 4 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &EntrootBerry, 20 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &OrcTooth, 20 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &DetectInvisibilityPotion, 1 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &DetectGoodPotion, 1 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &DetectEvilPotion, 1 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &IllusionaryFormPotion, 1 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &NeruditeArrow, 20 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &NodeBurstPotion, 1 ] ] ],
               #penaltylist=[ [ QN_PRIZETYPE_OUTLAW ] ],
               #timelimit=2 * 3600,#quest_node_index=QNT_ID_MERCHANT_TAX_TWO)
      {
         lNPCs = $;
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&DukeLiege)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_MERCHANT_TAX_TWO,
               #new_NPC_list=lNPCs);

         // Happy land subs.
         if NOT Send(SYS,@IsPKAllowed)
         {
            Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_MERCHANT_TAX_TWO,
                  #new_hint=vaulttax_assign_2_h);
            Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_MERCHANT_TAX_TWO,
                  #new_hint=vaulttax_failure_2_h);
         }
         else
         {
            // Use happyland subs anyway - no more outlaw punishment.
            Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_MERCHANT_TAX_TWO,
                  #new_hint=vaulttax_assign_2_h);
            Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_MERCHANT_TAX_TWO,
                  #new_hint=vaulttax_failure_2_h);
         }
         Send(oQE,@SetQuestNodeSuccessHint,#index=QNT_ID_MERCHANT_TAX_TWO,
               #new_hint=merchanttax_success_2);
      }
      else
      {
         Debug("Error building QN: QNT_ID_MERCHANT_TAX_TWO");
      }

      return;
   }

   ShowQuestUIDescRsc(who = $, oNPC = $)
   {
      local rName;

      if (oNPC = $)
      {
         Debug("Missing NPC while building quest UI description!");
         rName = system_blank_resource;
      }
      else
      {
         rName = Send(oNPC,@GetName);
      }

      AddPacket(4,vrDesc, 4,rName);

      return;
   }

end
/////////////////////////////////////////////////////////////////////////////////
