// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


/////////////////////////////////////////////////////////////////////////////////
LoveLetterOneQuest is LoveLetterQuestTemplate
// Quest template QST_ID_LOVE_LETTER_1 = 42.
// Quest nodes 135, 136.
// QNT_ID_LOVE_LETTERONE_ONE, QNT_ID_LOVE_LETTERONE_TWO

// QuestTemplate is
// [ quest template index
//   quest template object
//   number of players,
//   type of quest,
//   eligible player restrictions,
//   quest nodes,
//   max number active,
//   currently active quests,
//   percent chance of scheduling (on timer firing)
//   special restrictions ]

constants:

   include blakston.khd

resources:

   include loveletteroneqt.lkod

   // Quest description.
   loveletteronequest_name_rsc = "In the Service of Love"
   loveletteronequest_desc_rsc = \
      "%s has a penchant for writing romantic letters to his love interest.  "
      "Delivering one of these letters would net you a small reward."

   loveletteronequest_deliver_rsc = \
      "%s%s has asked you to deliver %s%s to %s%s."

   loveletteronequest_completed_rsc = \
      "You have delivered a love letter and helped romance blossom."

   // Quest resources.
   love_letter_1_assign = \
      "Yes, actually, I have %INDEF_CARGO%CARGO for my darling %NPC.  Please "
      "take it to her, and send her my love.  Tell her that I miss her, won't "
      "you?  And that I long for the moment when next we meet.  Go now, "
      "quickly, lest she think that my love for her is fleeting and fickle."
   love_letter_1_success = \
      "Ah, another letter from %SOURCE_NPC.  How wonderful.  Please take "
      "this for thy trouble."

classvars:

   vrName = loveletteronequest_name_rsc
   vrDesc = loveletteronequest_desc_rsc

   vrDeliver = loveletteronequest_deliver_rsc
   vrCompleted = loveletteronequest_completed_rsc

   // The QST_ID constant for this quest.
   viQuestID = QST_ID_LOVE_LETTER_1

properties:

messages:

   Constructor()
   {
      // Quest node list to send to QuestEngine.
      plQuestNodes = [QNT_ID_LOVE_LETTERONE_ONE,
                      QNT_ID_LOVE_LETTERONE_TWO];

      // Quest nodes with matching descriptions for the player.
      plQuestNodeDesc = [ [QNT_ID_LOVE_LETTERONE_TWO, vrDeliver] ];

      propagate;
   }

   SendQuestNodeTemplates()
   {
      local lNPCs, oNPC, oQE, oLib;

      oQE = Send(SYS,@GetQuestEngine);
      oLib = Send(SYS,@GetLibrary);

      // Template #135 is love letter quest 1
      // QNT_ID_LOVE_LETTERONE_ONE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #cargolist=[ letter_trigger ],
               #quest_node_index=QNT_ID_LOVE_LETTERONE_ONE)
      {
         lNPCs = $;
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&GuildCreator)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&BarloqueInnkeeper)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&TosApothecary)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&RebelLiege)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_LOVE_LETTERONE_ONE,
               #new_NPC_list=lNPCs);
      }
      else
      {
         Debug("Error building QN: QNT_ID_LOVE_LETTERONE_ONE");
      }

      // Template #136 is love letter quest 1
      // QNT_ID_LOVE_LETTERONE_TWO
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_ITEM,
               #NPC_modifier=QN_NPCMOD_NONE,
               #cargolist=[ [ QN_PRIZETYPE_ITEMCLASS, &LoveLetter, 1 ] ],
               //#cargolist=[ [ QN_PRIZETYPE_ITEMCLASS, &LoveLetter, 1 ],
               // [ QN_PRIZETYPE_ITEMCLASS, &Rose, 1 ] ],
               // had to delete the rose for text consistency.
               #prizelist=[ [ [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 500 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 600 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 400 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 700 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 550 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 650 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 400 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 700 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 550 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 650 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 450 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &Key, 1 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &SeduceWand, 1] ] ],
               #timelimit=6 * 3600,#quest_node_index=QNT_ID_LOVE_LETTERONE_TWO)
      {
         lNPCs = $;
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&BarloqueTailor)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_LOVE_LETTERONE_TWO,
               #new_NPC_list=lNPCs);
         Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_LOVE_LETTERONE_TWO,
               #new_hint=love_letter_1_assign);
         Send(oQE,@SetQuestNodeSuccessHint,#index=QNT_ID_LOVE_LETTERONE_TWO,
               #new_hint=love_letter_1_success);
         Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_LOVE_LETTERONE_TWO,
               #new_hint=love_letter_failure);
      }
      else
      {
         Debug("Error building QN: QNT_ID_LOVE_LETTERONE_TWO");
      }

      return;
   }

   ShowQuestUIDescRsc(who = $, oNPC = $)
   {
      local rName;

      if (oNPC = $)
      {
         Debug("Missing NPC while building quest UI description!");
         rName = system_blank_resource;
      }
      else
      {
         rName = Send(oNPC,@GetName);
      }

      AddPacket(4,vrDesc, 4,rName);

      return;
   }

   ExtraDesc(index=$,oQuestNode=$)
   {
      local oCargo, oDestNPC, oSourceNPC;

      if oQuestNode = $
         OR index = $
      {
         return;
      }

      if index = QNT_ID_LOVE_LETTERONE_TWO
      {
         oSourceNPC = Send(oQuestNode,@GetSourceNPC);
         oDestNPC = Send(oQuestNode,@GetDestNPC);
         oCargo = Send(oQuestNode,@GetCargo);

         AddPacket(4,Send(oSourceNPC,@GetCapDef), 4,Send(oSourceNPC,@GetName),
                   4,Send(oCargo,@GetIndef), 4,Send(oCargo,@GetName),
                   4,Send(oSourceNPC,@GetDef), 4,Send(oDestNPC,@GetName));
      }

      return;
   }

end
/////////////////////////////////////////////////////////////////////////////////
