// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


/////////////////////////////////////////////////////////////////////////////////
NecroWarnGoodQuest is QuestTemplate
// Quest template QST_ID_NECRO_WARNING_2 = 56.
// Quest nodes 171, 172, 173.
// QNT_ID_NECRO_WARN_GOOD_ONE, QNT_ID_NECRO_WARN_GOOD_TWO,
// QNT_ID_NECRO_WARN_GOOD_THREE

// QuestTemplate is
// [ quest template index
//   quest template object
//   number of players,
//   type of quest,
//   eligible player restrictions,
//   quest nodes,
//   max number active,
//   currently active quests,
//   percent chance of scheduling (on timer firing)
//   special restrictions ]

constants:

   include blakston.khd

resources:

   include necrowarngoodqt.lkod

   // Quest description.
   necrowarngoodqt_icon_rsc = necscrol.bgf
   necrowarngoodqt_name_rsc = "Doom Is Upon Us"
   necrowarngoodqt_desc_rsc = \
      "Parrin Aragone says he has urgent information regarding necromancers "
      "coming to the lands, threatening the lives of all inhabitants.  Help "
      "him get this valuable information to the priestesses."

   necrowarngoodqt_nodetwo_rsc = \
      "Parrin Aragone says he has urgent information regarding necromancers "
      "coming to the lands.  Help him warn others by delivering a letter "
      "to %s%s."
   necrowarngoodqt_nodethree_rsc = \
      "%s%s thought nothing of the warning.  Return to Parrin Aragone and "
      "let him know you have delivered the letter."

   necrowarngoodqt_completed_rsc = \
      "You have delivered Parrin's dire warning regarding the necromancer "
      "threat, and you can only hope it does not go unheeded."

   // Quest resources.
   necrowarning2_assign_2 = \
      "I have news of great urgency.  My travels have taken me to many places "
      "and I have seen many strange things but none so dangerous as these "
      "vile necromancers.  Please take this letter to %NPC, and quickly.  It "
      "is my belief that these creatures threaten all of Meridian.   They "
      "come from a power older than our gods, though these forces may be "
      "linked on some level."
   necrowarning2_success_2 = \
      "You bring me the rantings of a poor soul with a pitifully addled "
      "brain?  I have more important concerns at this moment.  Leave my "
      "presence, as I have nothing to say to you."
   necrowarning2_failure_2 = \
      "Subject: My letter\n"
      "You have failed your friends and the folk of Meridian for ages to "
      "come.  They are doomed to an existence besieged by dreadful malice and "
      "you choose not to give them a warning?  Your failure will cost lives.  "
      "I hope you can live with that."
   necrowarning2_success_3 = \
      "She listens not, but no matter.  She has been warned.  Thank you, "
      "brave soul.  Take this as your material reward for your service to "
      "the people of Meridian."

classvars:

   vrIcon = necrowarngoodqt_icon_rsc
   vrName = necrowarngoodqt_name_rsc
   vrDesc = necrowarngoodqt_desc_rsc

   vrNodeTwo = necrowarngoodqt_nodetwo_rsc
   vrNodeThree = necrowarngoodqt_nodethree_rsc

   vrCompleted = necrowarngoodqt_completed_rsc

   // The QST_ID constant for this quest.
   viQuestID = QST_ID_NECRO_WARNING_2

   viIcon_Animation_start = 1

properties:

   piNumPlayers = 1
   piPlayerRestrict = \
      Q_PLAYER_NOTTRIED_RECENTLY | Q_PLAYER_NOTNEWBIE | Q_PLAYER_KARMA_GOOD
   plSpecialRestrict = $
   piMaxPlayers = 14
   piSchedulePct = 100

messages:

   Constructor()
   {
      // Quest node list to send to QuestEngine.
      plQuestNodes = [QNT_ID_NECRO_WARN_GOOD_ONE,QNT_ID_NECRO_WARN_GOOD_TWO,
                      QNT_ID_NECRO_WARN_GOOD_THREE];

      // Quest nodes with matching descriptions for the player.
      plQuestNodeDesc = [ [QNT_ID_NECRO_WARN_GOOD_TWO, vrNodeTwo],
                          [QNT_ID_NECRO_WARN_GOOD_THREE, vrNodeThree] ];

      propagate;
   }

   SendQuestNodeTemplates()
   {
      local lNPCs, oNPC, oQE, oLib;

      oQE = Send(SYS,@GetQuestEngine);
      oLib = Send(SYS,@GetLibrary);

      // Template #171 is necro warning quest 2
      // QNT_ID_NECRO_WARN_GOOD_ONE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #NPC_modifier=QN_NPCMOD_NONE,#cargolist=[ letter_trigger ],
               #quest_node_index=QNT_ID_NECRO_WARN_GOOD_ONE)
      {
         lNPCs = $;
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&Minstrel)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_NECRO_WARN_GOOD_ONE,
               #new_NPC_list=lNPCs);
      }
      else
      {
         Debug("Error building QN: QNT_ID_NECRO_WARN_GOOD_ONE");
      }

      // Template #172 is necro warning quest 2
      // QNT_ID_NECRO_WARN_GOOD_TWO
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_ITEM,
               #NPC_modifier=QN_NPCMOD_NONE,
               #cargolist=[ [ QN_PRIZETYPE_ITEMCLASS, &NecromancerWarningLetter, 1 ] ],
               #timelimit=2 * 3600,#quest_node_index=QNT_ID_NECRO_WARN_GOOD_TWO)
      {
         lNPCs = $;
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&KraananPriestess)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&FarenPriestess)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&ShalillePriestess)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&QorPriestess)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_NECRO_WARN_GOOD_TWO,
               #new_NPC_list=lNPCs);
         Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_NECRO_WARN_GOOD_TWO,
               #new_hint=necrowarning2_assign_2);
         Send(oQE,@SetQuestNodeSuccessHint,#index=QNT_ID_NECRO_WARN_GOOD_TWO,
               #new_hint=necrowarning2_success_2);
         Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_NECRO_WARN_GOOD_TWO,
               #new_hint=necrowarning2_failure_2);
      }
      else
      {
         Debug("Error building QN: QNT_ID_NECRO_WARN_GOOD_TWO");
      }

      // Template #173 is necro warning quest 2
      // QNT_ID_NECRO_WARN_GOOD_THREE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_SHOWUP,
               #NPC_modifier=QN_NPCMOD_PREVIOUS,
               #prizelist=[ [ [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 10000 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 10000 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &Shillings, 12000 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &VampireWand, 1 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &SilverArrow, 15],
                              [ QN_PRIZETYPE_ITEMCLASS, &FireArrow, 15],
                              [ QN_PRIZETYPE_ITEMCLASS, &IceArrow, 15],
                              [ QN_PRIZETYPE_ITEMCLASS, &AcidArrow, 15],
                              [ QN_PRIZETYPE_ITEMCLASS, &Prism, 1 ] ] ],
               #timelimit=4 * 3600,#quest_node_index=QNT_ID_NECRO_WARN_GOOD_THREE)
      {
         Send(oQE,@SetQuestNodeSuccessHint,#index=QNT_ID_NECRO_WARN_GOOD_THREE,
               #new_hint=necrowarning2_success_3);
      }
      else
      {
         Debug("Error building QN: QNT_ID_NECRO_WARN_GOOD_THREE");
      }

      return;
   }

   ExtraDesc(index=$,oQuestNode=$)
   {
      local oDestNPC, oSourceNPC;

      if oQuestNode = $
         OR index = $
      {
         return;
      }

      if index = QNT_ID_NECRO_WARN_GOOD_TWO
      {
         oDestNPC = Send(oQuestNode,@GetDestNPC);
         AddPacket(4,Send(oDestNPC,@GetDef), 4,Send(oDestNPC,@GetName));

         return;
      }

      if index = QNT_ID_NECRO_WARN_GOOD_THREE
      {
         oSourceNPC = Send(oQuestNode,@GetSourceNPC);
         AddPacket(4,Send(oSourceNPC,@GetCapDef), 4,Send(oSourceNPC,@GetName));

         return;
      }

      return;
   }

end
/////////////////////////////////////////////////////////////////////////////////
