// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


/////////////////////////////////////////////////////////////////////////////////
Bleed is Drain

constants:

   include blakston.khd

   // Bleeds below this amount of damage (precision) won't be considered.
   BLEED_DAMAGE_CUT_OFF = 100

resources:

   include bleed.lkod

   bleed_on = "~k~IYou begin to bleed for ~r%i~k damage."
   bleed_off  = "~k~IYou stop bleeding."
   bleed_icon = ibleed.bgf
   bleed_name = "bleeding"

   bleed_desc = \
      "Blood oozes from a deep wound and with every drop staining the "
      "ground, you sense your rendez-vous with death approaching a little "
      "closer.  With a grim smile, you ponder the irony of being the hourglass "
      "counting the seconds to your own demise."

   bleed_sound = bleeding.ogg

classvars:

   vrIcon = bleed_icon
   viShow_enchantment_icon = 0x02
   vrName = bleed_name
   vrDesc = bleed_desc

   vrEnchantment_On = bleed_on
   vrEnchantment_Off = bleed_off
   vrDrain_wav = bleed_sound
   vrDrain_wav_duration = 3095

   viSpell_num = SID_BLEED
   viSchool = SS_KRAANAN

   viLightColor = LIGHT_BLOOD

properties:

   // Infrastructure for bleed drain effect only.
   pbCanBeLearned = FALSE

messages:

   StartBleed(who=$,source=0,strength=0,duration=0,bIllusionary=FALSE)
   "Healthloss is in units of 10^-3 health points per second."
   "Duration is in milliseconds."
   {
      local iDamage, iFlash, iStrength, iIllusion;

      iIllusion = FALSE;

      if bIllusionary
      {
         iStrength = strength + (50 - Send(who,@GetIntellect))*40;
         iIllusion = GetTime();
      }
      else
      {
         iStrength = strength;
      }

      // If our bleed is too weak, ignore it.
      if (strength/100) * (duration/100) < BLEED_DAMAGE_CUT_OFF
      {
         return FALSE;
      }

      // Stack bleeding only if the effect is not present.
      if NOT Send(who,@HasOverTimeEffect,#num=SID_BLEED)
      {
         Send(who,@StartOverTimeEffect,#strength=-strength,#duration=duration,
            #what=self,#who=source,#state=100,#type=TYPE_HEALTH,
            #removable=REMOVE_INTERNAL,#illusion=iIllusion);

         if IsClass(who,&Player)
         {
            iDamage = (iStrength / 100) * (duration / 100) / 100;
            Send(who,@MsgSendUser,#message_rsc=vrEnchantment_On,#parm1=iDamage);

            // Visual indication of drain effect.
            iFlash = Bound(iStrength / 2,100,2000);
            Send(who,@EffectSendUserDuration,#effect=EFFECT_PAIN,#duration=iFlash);
         }

         return TRUE;
      }

      return FALSE;
   }

end
////////////////////////////////////////////////////////////////////////////////
