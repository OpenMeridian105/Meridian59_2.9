// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
Ring is PassiveItem

constants:
   
   include blakston.khd

resources:

   include ring.lkod

   ring_unidentified_name_rsc = "magical ring"
   ring_unidentified_description_rsc = "The ring pulses with magical energy."

   ring_identified_name_rsc = "generic magical ring"
   ring_identified_description_rsc = "The has some magical effect."

   combine_rings_rsc = \
      "You combine the %s with your current stock, for a total "
      "of %d uses."

classvars:

   viUse_type = ITEM_USE_FINGER
   viUse_Amount = 1

   viItem_type = ITEMTYPE_RING

   vrRealName = ring_identified_name_rsc
   vrRealDesc = ring_identified_name_rsc

   vbIsNotStackable = TRUE // rings are not stackable by default

properties:

   vrName = ring_unidentified_name_rsc
   vrDesc = ring_unidentified_description_rsc

messages:

   ReqUseSomething(what = $)
   {
      if IsClass(what, &Ring)
      {
         if Send(poOwner, @TryUnuseItem, #what = self)
         {
            propagate;
         }
         
         return FALSE;
      }
      
      propagate;
   }

   //// Infrastructure for identification

   CanIdentify()
   {
      return TRUE;
   }

   RevealHiddenAttributes()
   {
      if vrName <> vrRealName
      {
         vrName = vrRealName;
         vrDesc = vrRealDesc;
         return TRUE;
      }
      
      return FALSE;
   }

   GetTrueName()
   {
      return vrRealName;
   }

   CombineRings(what = $)
   {
      local iSacrificeHits;

      if vbIsNotStackable
      {
         return;
      }

      if what = $
      {
         return;
      }

      iSacrificeHits = Send(what,@GetHits);
      if iSacrificeHits = $
         OR iSacrificeHits < 1
      {
         return;
      }
      
      Send(self,@SetHits,#number=piHits + iSacrificeHits);

      if IsClass(poOwner,&User)
      {
         Send(poOwner,@MsgSendUser,#message_rsc=combine_rings_rsc,
               #parm1=Send(what,@GetName),
               #parm2=piHits);
      }

      Send(what,@Delete);

      return;
   }

end
////////////////////////////////////////////////////////////////////////////////
