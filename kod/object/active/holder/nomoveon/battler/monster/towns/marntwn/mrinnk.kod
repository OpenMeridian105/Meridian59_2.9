// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
MarionInnkeeper is MarionTown

constants:

   include blakston.khd
   include protocol.khd

resources:

   include mrinnk.lkod

   MarionInnkeep_name_rsc = "Morrigan"
   MarionInnkeep_icon_rsc = mrinnk.bgf
   MarionInnkeep_desc_rsc = \
      "A silly little man, Morrigan maintains a modest business alternately "
      "buying and selling reagents and other various notions.  Although his "
      "heart doesn't seem to be in commerce, there can be little doubt "
      "Morrigan loves his job. "

   MrIk_entry_welcome = \
      "Pardon me for saying so, but you look like you could use a rest, %s%s."

   MarionInnkeeper_room_rented = \
      "Here ya go then.  Hope you enjoy your stay, if you have any problems "
      "Tova will be glad to help you."

   MarionInnkeeper_cost = \
      "Oh, good, you should rest.  Let me see....  I charge %i shillings to "
      "~Irent~n a nice ~Iroom~n here for 85 days.  If you wish to stay "
      "longer, I charge %i per day if you pre-pay.  Key copies, uh, key "
      "copies....  Oh, they cost %i shillings to make.  I know you'll "
      "like your room."

   MarionInnkeeper_days_left = \
      "You like it here, I see.  There are %q days until you should "
      "pay me again."
   MarionInnkeeper_too_long = \
      "Oh, I can't be responsible for holding so much money!  Pay me again "
      "later when you don't have so many days left on your tab."

   MarionInnkeeper_destroy_key_copy = \
      "~kMorrigan tells you, \"Oh, yes. I can get rid of this key for "
      "you.  No problem.\""

   MrIk_room_command = "room"
   MrIk_rent_command = "rent"
   MrIk_cost_command = "cost"
   MrIk_copy_key_command = "copy key"

classvars:

   vrName = MarionInnkeep_name_rsc
   vrIcon = MarionInnkeep_icon_rsc
   vrDesc = MarionInnkeep_desc_rsc
   viMerchant_Markup = MERCHANT_RIPOFF
   viAttributes = \
      MOB_NOFIGHT | MOB_NOMOVE | MOB_LISTEN | MOB_BUYER \
         | MOB_SELLER | MOB_LISTEN_MOB | MOB_FULL_TALK
   viOccupation = MOB_ROLE_INNKEEPER

properties:

   piInitialRoomCost = 5000
   piPerDayCost = 75
   piKeyCopyCosts = 500

messages:

   // Special handling to make him laugh at Tova's chatter
   SomeoneSaid(what=$,string=$)
   {
      local oRoomMaint, rSayRsc;

      // If it's Tova talking
      if IsClass(what, &MarionBartender)
      {
         // One out of three times
         if Random(1,3) = 1
         {
            // Simulate randomtimer firing
            Send(self,@RandomTimer,#test=TRUE);

            return;
         }
      }

      if IsClass(what,&User)
      {
         oRoomMaint = Send(SYS,@GetRentableRoomMaintenance);

         if (StringContain(string,MrIk_rent_command)
               AND StringContain(string,MrIk_room_command))
            OR (StringContain(string,"rent")
               AND StringContain(string,"room"))
         {
            rSayRsc = Send(oRoomMaint,@RentRoom,#who=what,
                           #iLocation=RID_MAR_INN,#iCost=piInitialRoomCost);

            // rSayRsc is $ on success.  Use the innkeeper's saying.
            if rSayRsc = $
            {
               rSayRsc = MarionInnkeeper_room_rented;
            }

            Post(poOwner,@SomeoneSaid,#type=SAY_RESOURCE,
                  #what=self,#string=rSayRsc);

            return;
         }

         if StringContain(string,MrIk_copy_key_command)
            OR StringContain(string,"copy key")
         {
            rSayRsc = Send(oRoomMaint,@CopyKey,#who=what,
                           #iLocation=RID_MAR_INN,#iCost=piKeyCopyCosts);

            // Tell the player.
            Post(poOwner,@SomeoneSaid,#type=SAY_RESOURCE,
                  #what=self,#string=rSayRsc);

            return;
         }

         if (StringContain(string,MrIk_room_command)
               AND StringContain(string,MrIk_cost_command))
            OR (StringContain(string,"room")
               AND StringContain(string,"cost"))
         {
            Post(poOwner,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,
                  #string=MarionInnkeeper_cost,#type1=0,
                  #parm1=piInitialRoomCost,#parm2=piPerDayCost,
                  #parm3=piKeyCopyCosts);

            return;
         }
      }

      propagate;
   }

   ReqOffer(what = $,item_list = $)
   {
      local i, iMoney, oRoomMaint, iNewDays;

      // Check for if in the same room.
      if Send(what,@GetOwner) <> poOwner
      {
         Debug("ALERT! ",Send(what,@GetTrueName),what," offered items to NPC ",
               Send(self,@GetTrueName)," from distant RID ",
               Send(Send(what,@GetOwner),@GetRoomNum));

         return FALSE;
      }

      foreach i in item_list
      {
         if NOT IsClass(i,&Shillings)
         {
            if GetClass(i) = &RoomKeyCopy
            {
               // Say something and delete the key.
               Send(what,@MsgSendUser,
                     #message_rsc=MarionInnkeeper_destroy_key_copy);
               Send(i,@Delete);

               return FALSE;
            }

            propagate;
         }
      }

      iMoney = 0;
      foreach i in item_list
      {
         iMoney = iMoney + Send(i,@GetValue);
      }

      oRoomMaint = Send(SYS,@GetRentableRoomMaintenance);

      iNewDays = Send(oRoomMaint,@GotRent,#who=what,#iAmount=iMoney,
                     #iCost=piPerDayCost,#iLocation=RID_MAR_INN);

      if iNewDays <> $
      {
         // iNewDays = 0 means that we've trying to pay for than max days.
         if iNewDays = 0
         {
            Post(poOwner,@SomeoneSaid,#type=SAY_RESOURCE,#what=self,
                  #string=MarionInnkeeper_too_long);
         }
         else
         {
            Post(poOwner,@SomeoneSaid,#type=SAY_RESOURCE,#what=self,
                  #string=MarionInnkeeper_days_left,
                  #parm1=Send(SYS,@IntToString,#num=iNewDays),
                  #type1=STRING_RESOURCE);
         }

         return FALSE;
      }

      propagate;
   }

   ObjectDesired(what=$)
   {
      if Send(self,@IsObjectSundry,#what=what)
         OR Send(self,@IsObjectReagent,#what=what)
         OR Send(self,@IsObjectWearable,#what=what)
      {
         return TRUE;
      }

      return FALSE;
   }

   SetForSale()
   {
      plFor_sale = [
         [
            Create(&LoadoutScroll,#labelled=TRUE),
            Create(&SetScroll,#labelled=TRUE),
            Create(&PantsC,#translation=PT_GRAY_TO_LRED),
            Create(&PantsC,#translation=PT_GRAY_TO_KORANGE),
            Create(&Elderberry,#number=4),
            Create(&Herbs,#number=5),
            Create(&Torch)
         ],
      $,$,$];

      return;
   }

   UserEntered(who=$)
   {
      Post(who,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,
            #string=MrIk_entry_welcome,
            #parm1=Send(who,@GetDef),#parm2=Send(who,@GetName));

      propagate;
   }

end
////////////////////////////////////////////////////////////////////////////////
